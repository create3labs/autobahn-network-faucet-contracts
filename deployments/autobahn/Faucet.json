{
  "address": "0xE52A1a43B60EE1fc0e174B8cc1f85dBc593eb216",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gasAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "GasReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "GasSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "gasAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "receivedGas",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sendGas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gasAmount",
          "type": "uint256"
        }
      ],
      "name": "setGasAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7e1f14cece42a9a922b459a8e90abb446afc4ea8d1aa801c1022c38eadec23c8",
  "receipt": {
    "to": null,
    "from": "0x233005c89ab1f5396B0d61B02cE3821e417efe19",
    "contractAddress": "0xE52A1a43B60EE1fc0e174B8cc1f85dBc593eb216",
    "transactionIndex": 0,
    "gasUsed": "619560",
    "logsBloom": "0x
    "blockHash": "0x5e637eeaa0a0babaaba42b1f46da294710b3c147617df8a31508b57d44afde64",
    "transactionHash": "0x7e1f14cece42a9a922b459a8e90abb446afc4ea8d1aa801c1022c38eadec23c8",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 883171,
        "transactionHash": "0x7e1f14cece42a9a922b459a8e90abb446afc4ea8d1aa801c1022c38eadec23c8",
        "address": "0xE52A1a43B60EE1fc0e174B8cc1f85dBc593eb216",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000233005c89ab1f5396b0d61b02ce3821e417efe19"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x5e637eeaa0a0babaaba42b1f46da294710b3c147617df8a31508b57d44afde64"
      }
    ],
    "blockNumber": 883171,
    "cumulativeGasUsed": "619560",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "1000000000000000000"
  ],
  "numDeployments": 3,
  "solcInputHash": "45efa2df77cb947abb51f95dc3586385",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"GasReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"GasSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"gasAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receivedGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sendGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasAmount\",\"type\":\"uint256\"}],\"name\":\"setGasAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Faucet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\n\\ncontract Faucet is Ownable {\\n    uint256 public gasAmount;\\n    mapping(address => uint256) public receivedGas;\\n\\n    event GasReceived(address indexed from, uint256 indexed amount);\\n    event GasSent(address indexed to, uint256 indexed amount);\\n\\n    constructor(uint256 _gasAmount) {\\n        gasAmount = _gasAmount;\\n    }\\n\\n    function sendGas(address payable to) external onlyOwner {\\n        require(receivedGas[to] == 0, 'Faucet: Has already received gas');\\n        receivedGas[to] += gasAmount;\\n        to.transfer(gasAmount);\\n        emit GasSent(to, gasAmount);\\n    }\\n\\n    function setGasAmount(uint256 _gasAmount) external onlyOwner {\\n        gasAmount = _gasAmount;\\n    }\\n\\n    fallback() external payable {\\n        emit GasReceived(msg.sender, msg.value);\\n    }\\n}\\n\",\"keccak256\":\"0x4e5f24104dd84dce98ec2272f365af96153f7d838b86f2838f2ae5bcf251f9fe\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610af2380380610af283398181016040528101906100329190610162565b61004e61004361005b60201b60201c565b61006360201b60201c565b806001819055505061018f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b61013f8161012c565b811461014a57600080fd5b50565b60008151905061015c81610136565b92915050565b60006020828403121561017857610177610127565b5b60006101868482850161014d565b91505092915050565b6109548061019e6000396000f3fe6080604052600436106100745760003560e01c80637883e6a71161004e5780637883e6a7146101265780638da5cb5b1461014f578063e17696631461017a578063f2fde38b146101b757610075565b80630c8f78fb146100bb57806367b50af9146100e4578063715018a61461010f57610075565b5b343373ffffffffffffffffffffffffffffffffffffffff167fac6d9bca9723eab525a17dfc39dc1134505c8a61a5d68595a37d326228ac22c360405160405180910390a3005b3480156100c757600080fd5b506100e260048036038101906100dd91906105c9565b6101e0565b005b3480156100f057600080fd5b506100f96101f2565b6040516101069190610605565b60405180910390f35b34801561011b57600080fd5b506101246101f8565b005b34801561013257600080fd5b5061014d6004803603810190610148919061067e565b61020c565b005b34801561015b57600080fd5b50610164610380565b60405161017191906106cc565b60405180910390f35b34801561018657600080fd5b506101a1600480360381019061019c9190610713565b6103a9565b6040516101ae9190610605565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d99190610713565b6103c1565b005b6101e8610444565b8060018190555050565b60015481565b610200610444565b61020a60006104c2565b565b610214610444565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028d9061079d565b60405180910390fd5b600154600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e791906107ec565b925050819055508073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f19350505050158015610336573d6000803e3d6000fd5b506001548173ffffffffffffffffffffffffffffffffffffffff167fff6cba27e602e4bdfa607957d2e6ac46216c1387ede630b8c229d212286c323660405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090505481565b6103c9610444565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90610892565b60405180910390fd5b610441816104c2565b50565b61044c610586565b73ffffffffffffffffffffffffffffffffffffffff1661046a610380565b73ffffffffffffffffffffffffffffffffffffffff16146104c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b7906108fe565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b6105a681610593565b81146105b157600080fd5b50565b6000813590506105c38161059d565b92915050565b6000602082840312156105df576105de61058e565b5b60006105ed848285016105b4565b91505092915050565b6105ff81610593565b82525050565b600060208201905061061a60008301846105f6565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061064b82610620565b9050919050565b61065b81610640565b811461066657600080fd5b50565b60008135905061067881610652565b92915050565b6000602082840312156106945761069361058e565b5b60006106a284828501610669565b91505092915050565b60006106b682610620565b9050919050565b6106c6816106ab565b82525050565b60006020820190506106e160008301846106bd565b92915050565b6106f0816106ab565b81146106fb57600080fd5b50565b60008135905061070d816106e7565b92915050565b6000602082840312156107295761072861058e565b5b6000610737848285016106fe565b91505092915050565b600082825260208201905092915050565b7f4661756365743a2048617320616c726561647920726563656976656420676173600082015250565b6000610787602083610740565b915061079282610751565b602082019050919050565b600060208201905081810360008301526107b68161077a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107f782610593565b915061080283610593565b925082820190508082111561081a576108196107bd565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061087c602683610740565b915061088782610820565b604082019050919050565b600060208201905081810360008301526108ab8161086f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006108e8602083610740565b91506108f3826108b2565b602082019050919050565b60006020820190508181036000830152610917816108db565b905091905056fea2646970667358221220630ce06e9613031b94928109edc97304f7a311d467f8cbcbaa92588e7985e17264736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80637883e6a71161004e5780637883e6a7146101265780638da5cb5b1461014f578063e17696631461017a578063f2fde38b146101b757610075565b80630c8f78fb146100bb57806367b50af9146100e4578063715018a61461010f57610075565b5b343373ffffffffffffffffffffffffffffffffffffffff167fac6d9bca9723eab525a17dfc39dc1134505c8a61a5d68595a37d326228ac22c360405160405180910390a3005b3480156100c757600080fd5b506100e260048036038101906100dd91906105c9565b6101e0565b005b3480156100f057600080fd5b506100f96101f2565b6040516101069190610605565b60405180910390f35b34801561011b57600080fd5b506101246101f8565b005b34801561013257600080fd5b5061014d6004803603810190610148919061067e565b61020c565b005b34801561015b57600080fd5b50610164610380565b60405161017191906106cc565b60405180910390f35b34801561018657600080fd5b506101a1600480360381019061019c9190610713565b6103a9565b6040516101ae9190610605565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d99190610713565b6103c1565b005b6101e8610444565b8060018190555050565b60015481565b610200610444565b61020a60006104c2565b565b610214610444565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028d9061079d565b60405180910390fd5b600154600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e791906107ec565b925050819055508073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f19350505050158015610336573d6000803e3d6000fd5b506001548173ffffffffffffffffffffffffffffffffffffffff167fff6cba27e602e4bdfa607957d2e6ac46216c1387ede630b8c229d212286c323660405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090505481565b6103c9610444565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90610892565b60405180910390fd5b610441816104c2565b50565b61044c610586565b73ffffffffffffffffffffffffffffffffffffffff1661046a610380565b73ffffffffffffffffffffffffffffffffffffffff16146104c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b7906108fe565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b6105a681610593565b81146105b157600080fd5b50565b6000813590506105c38161059d565b92915050565b6000602082840312156105df576105de61058e565b5b60006105ed848285016105b4565b91505092915050565b6105ff81610593565b82525050565b600060208201905061061a60008301846105f6565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061064b82610620565b9050919050565b61065b81610640565b811461066657600080fd5b50565b60008135905061067881610652565b92915050565b6000602082840312156106945761069361058e565b5b60006106a284828501610669565b91505092915050565b60006106b682610620565b9050919050565b6106c6816106ab565b82525050565b60006020820190506106e160008301846106bd565b92915050565b6106f0816106ab565b81146106fb57600080fd5b50565b60008135905061070d816106e7565b92915050565b6000602082840312156107295761072861058e565b5b6000610737848285016106fe565b91505092915050565b600082825260208201905092915050565b7f4661756365743a2048617320616c726561647920726563656976656420676173600082015250565b6000610787602083610740565b915061079282610751565b602082019050919050565b600060208201905081810360008301526107b68161077a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107f782610593565b915061080283610593565b925082820190508082111561081a576108196107bd565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061087c602683610740565b915061088782610820565b604082019050919050565b600060208201905081810360008301526108ab8161086f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006108e8602083610740565b91506108f3826108b2565b602082019050919050565b60006020820190508181036000830152610917816108db565b905091905056fea2646970667358221220630ce06e9613031b94928109edc97304f7a311d467f8cbcbaa92588e7985e17264736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 141,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "gasAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 145,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "receivedGas",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}