{
  "address": "0x986C24805CCE52f7511a9Daa61338fE050658795",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gasAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "GasReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "GasSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "gasAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "receivedGas",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sendGas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gasAmount",
          "type": "uint256"
        }
      ],
      "name": "setGasAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x60db330b07a2786a695030cb7973fa84bf10b360417c14a82417d1920ae95a6d",
  "receipt": {
    "to": null,
    "from": "0x233005c89ab1f5396B0d61B02cE3821e417efe19",
    "contractAddress": "0x986C24805CCE52f7511a9Daa61338fE050658795",
    "transactionIndex": 0,
    "gasUsed": "568529",
    "logsBloom": "0x
    "blockHash": "0x46aadba308963a7708f7c47c4e1dae5aa74a698d3f4517afb6e1fc46ba40345f",
    "transactionHash": "0x60db330b07a2786a695030cb7973fa84bf10b360417c14a82417d1920ae95a6d",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 880958,
        "transactionHash": "0x60db330b07a2786a695030cb7973fa84bf10b360417c14a82417d1920ae95a6d",
        "address": "0x986C24805CCE52f7511a9Daa61338fE050658795",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000233005c89ab1f5396b0d61b02ce3821e417efe19"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x46aadba308963a7708f7c47c4e1dae5aa74a698d3f4517afb6e1fc46ba40345f"
      }
    ],
    "blockNumber": 880958,
    "cumulativeGasUsed": "568529",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "1000000000000000000"
  ],
  "numDeployments": 2,
  "solcInputHash": "ae08d8aeffe7e9026b3c17dd840d9ea9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"GasReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"GasSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"gasAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"receivedGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sendGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasAmount\",\"type\":\"uint256\"}],\"name\":\"setGasAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Faucet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\n\\ncontract Faucet is Ownable {\\n    uint256 public gasAmount;\\n    mapping(address => uint256) public receivedGas;\\n\\n    event GasReceived(address indexed from, uint256 indexed amount);\\n    event GasSent(address indexed to, uint256 indexed amount);\\n\\n    constructor(uint256 _gasAmount) {\\n        gasAmount = _gasAmount;\\n    }\\n\\n    function sendGas(address payable to) external onlyOwner {\\n        receivedGas[to] += gasAmount;\\n        to.transfer(gasAmount);\\n        emit GasSent(to, gasAmount);\\n    }\\n\\n    function setGasAmount(uint256 _gasAmount) external onlyOwner {\\n        gasAmount = _gasAmount;\\n    }\\n\\n    fallback() external payable {\\n        emit GasReceived(msg.sender, msg.value);\\n    }\\n}\\n\",\"keccak256\":\"0x371c9df61faa19a988181cf1c5eac5d4b4b85e389b51adb257a57938156bfc7b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a04380380610a0483398181016040528101906100329190610162565b61004e61004361005b60201b60201c565b61006360201b60201c565b806001819055505061018f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b61013f8161012c565b811461014a57600080fd5b50565b60008151905061015c81610136565b92915050565b60006020828403121561017857610177610127565b5b60006101868482850161014d565b91505092915050565b6108668061019e6000396000f3fe6080604052600436106100745760003560e01c80637883e6a71161004e5780637883e6a7146101265780638da5cb5b1461014f578063e17696631461017a578063f2fde38b146101b757610075565b80630c8f78fb146100bb57806367b50af9146100e4578063715018a61461010f57610075565b5b343373ffffffffffffffffffffffffffffffffffffffff167fac6d9bca9723eab525a17dfc39dc1134505c8a61a5d68595a37d326228ac22c360405160405180910390a3005b3480156100c757600080fd5b506100e260048036038101906100dd9190610547565b6101e0565b005b3480156100f057600080fd5b506100f96101f2565b6040516101069190610583565b60405180910390f35b34801561011b57600080fd5b506101246101f8565b005b34801561013257600080fd5b5061014d600480360381019061014891906105fc565b61020c565b005b34801561015b57600080fd5b506101646102fe565b604051610171919061064a565b60405180910390f35b34801561018657600080fd5b506101a1600480360381019061019c9190610691565b610327565b6040516101ae9190610583565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d99190610691565b61033f565b005b6101e86103c2565b8060018190555050565b60015481565b6102006103c2565b61020a6000610440565b565b6102146103c2565b600154600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026591906106ed565b925050819055508073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f193505050501580156102b4573d6000803e3d6000fd5b506001548173ffffffffffffffffffffffffffffffffffffffff167fff6cba27e602e4bdfa607957d2e6ac46216c1387ede630b8c229d212286c323660405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090505481565b6103476103c2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ad906107a4565b60405180910390fd5b6103bf81610440565b50565b6103ca610504565b73ffffffffffffffffffffffffffffffffffffffff166103e86102fe565b73ffffffffffffffffffffffffffffffffffffffff161461043e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043590610810565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b61052481610511565b811461052f57600080fd5b50565b6000813590506105418161051b565b92915050565b60006020828403121561055d5761055c61050c565b5b600061056b84828501610532565b91505092915050565b61057d81610511565b82525050565b60006020820190506105986000830184610574565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105c98261059e565b9050919050565b6105d9816105be565b81146105e457600080fd5b50565b6000813590506105f6816105d0565b92915050565b6000602082840312156106125761061161050c565b5b6000610620848285016105e7565b91505092915050565b60006106348261059e565b9050919050565b61064481610629565b82525050565b600060208201905061065f600083018461063b565b92915050565b61066e81610629565b811461067957600080fd5b50565b60008135905061068b81610665565b92915050565b6000602082840312156106a7576106a661050c565b5b60006106b58482850161067c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106f882610511565b915061070383610511565b925082820190508082111561071b5761071a6106be565b5b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061078e602683610721565b915061079982610732565b604082019050919050565b600060208201905081810360008301526107bd81610781565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006107fa602083610721565b9150610805826107c4565b602082019050919050565b60006020820190508181036000830152610829816107ed565b905091905056fea26469706673582212200fb9df0f06be219cf9521e6cae2a224c73d436de8654f2f55e7b638a566782e064736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80637883e6a71161004e5780637883e6a7146101265780638da5cb5b1461014f578063e17696631461017a578063f2fde38b146101b757610075565b80630c8f78fb146100bb57806367b50af9146100e4578063715018a61461010f57610075565b5b343373ffffffffffffffffffffffffffffffffffffffff167fac6d9bca9723eab525a17dfc39dc1134505c8a61a5d68595a37d326228ac22c360405160405180910390a3005b3480156100c757600080fd5b506100e260048036038101906100dd9190610547565b6101e0565b005b3480156100f057600080fd5b506100f96101f2565b6040516101069190610583565b60405180910390f35b34801561011b57600080fd5b506101246101f8565b005b34801561013257600080fd5b5061014d600480360381019061014891906105fc565b61020c565b005b34801561015b57600080fd5b506101646102fe565b604051610171919061064a565b60405180910390f35b34801561018657600080fd5b506101a1600480360381019061019c9190610691565b610327565b6040516101ae9190610583565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d99190610691565b61033f565b005b6101e86103c2565b8060018190555050565b60015481565b6102006103c2565b61020a6000610440565b565b6102146103c2565b600154600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026591906106ed565b925050819055508073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f193505050501580156102b4573d6000803e3d6000fd5b506001548173ffffffffffffffffffffffffffffffffffffffff167fff6cba27e602e4bdfa607957d2e6ac46216c1387ede630b8c229d212286c323660405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090505481565b6103476103c2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ad906107a4565b60405180910390fd5b6103bf81610440565b50565b6103ca610504565b73ffffffffffffffffffffffffffffffffffffffff166103e86102fe565b73ffffffffffffffffffffffffffffffffffffffff161461043e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043590610810565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b61052481610511565b811461052f57600080fd5b50565b6000813590506105418161051b565b92915050565b60006020828403121561055d5761055c61050c565b5b600061056b84828501610532565b91505092915050565b61057d81610511565b82525050565b60006020820190506105986000830184610574565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105c98261059e565b9050919050565b6105d9816105be565b81146105e457600080fd5b50565b6000813590506105f6816105d0565b92915050565b6000602082840312156106125761061161050c565b5b6000610620848285016105e7565b91505092915050565b60006106348261059e565b9050919050565b61064481610629565b82525050565b600060208201905061065f600083018461063b565b92915050565b61066e81610629565b811461067957600080fd5b50565b60008135905061068b81610665565b92915050565b6000602082840312156106a7576106a661050c565b5b60006106b58482850161067c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106f882610511565b915061070383610511565b925082820190508082111561071b5761071a6106be565b5b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061078e602683610721565b915061079982610732565b604082019050919050565b600060208201905081810360008301526107bd81610781565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006107fa602083610721565b9150610805826107c4565b602082019050919050565b60006020820190508181036000830152610829816107ed565b905091905056fea26469706673582212200fb9df0f06be219cf9521e6cae2a224c73d436de8654f2f55e7b638a566782e064736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 141,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "gasAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 145,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "receivedGas",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}